// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoCapstone.Data;

#nullable disable

namespace ProyectoCapstone.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230708060418_AddDatos")]
    partial class AddDatos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoCapstone.Models.BlocCita", b =>
                {
                    b.Property<int>("BlocCitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlocCitaID"), 1L, 1);

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<string>("dia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lugarEncuentro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreDiscapacitado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreVoluntario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tiempoCita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlocCitaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("blocCitas");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.BlocUsuario", b =>
                {
                    b.Property<int>("BlocUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlocUsuarioID"), 1L, 1);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("codigoVerificarCorreo")
                        .HasColumnType("int");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diaDisponible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discapacidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroDni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("recomendacion")
                        .HasColumnType("int");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("BlocUsuarioID");

                    b.ToTable("blocUsuarios");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Cita", b =>
                {
                    b.Property<int>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaID"), 1L, 1);

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<string>("fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lugarEncuentro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreDiscapacitado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreVoluntario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tiempoCita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CitaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("cita");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Contactanos", b =>
                {
                    b.Property<int>("ContactanosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactanosID"), 1L, 1);

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactanosID");

                    b.ToTable("contactanos");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Recomendacion", b =>
                {
                    b.Property<int>("RecomendacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecomendacionID"), 1L, 1);

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int?>("calificacion")
                        .HasColumnType("int");

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreDiscapacitado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreVoluntario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecomendacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("recomendaciones");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"), 1L, 1);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("rols");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"), 1L, 1);

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("codigoVerificarCorreo")
                        .HasColumnType("int");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diaDisponible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discapacidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroDni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("recomendacion")
                        .HasColumnType("int");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("RolID");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.BlocCita", b =>
                {
                    b.HasOne("ProyectoCapstone.Models.Usuario", "usuario")
                        .WithMany("blocCitas")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Cita", b =>
                {
                    b.HasOne("ProyectoCapstone.Models.Usuario", "usuario")
                        .WithMany("citas")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Recomendacion", b =>
                {
                    b.HasOne("ProyectoCapstone.Models.Usuario", "usuario")
                        .WithMany("recomendaciones")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoCapstone.Models.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Rol", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("ProyectoCapstone.Models.Usuario", b =>
                {
                    b.Navigation("blocCitas");

                    b.Navigation("citas");

                    b.Navigation("recomendaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
